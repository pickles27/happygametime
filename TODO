STUFF TO DO:

[x] make logout button remove token too
[x] make tic tac toe game use userId to set game state and create new database game rows
[x] make login peristant?? to refresh until logged out? or not until done editing game
		- store token in local storage or cookie (browser side api, get token from server then store in LS then can assume logged in
		if token is expired then must delete from local storage and make user login)
[x] make game moves and creategame require token to validate id
  //need player id in json web token payload.
[ ] let user send in-game game invitations (make notifications page)
[ ] let user send email invitation 
			-nodemailer
[ ] let person accept game invitation through email, and keep that state while they create an account
[x] let user join open games

Chatbox/private messages stuff:
[ ] people online bar on right side
[ ] double click on person to send private message

Notifications page:
[ ] see invites from other players
[ ] invite someone to play section
		[ ] type of game
		[ ] person to invite (email OR username) have separate functions for invite w email or invite w username
			- if person isn't member, send email. 
			-if person is member:
				-if username is chosen, send notif that way (maybe have "send email too" button)
				-send email if email is chosen and also send notif in app
[ ] if user has a new notification, make notification button red. once user has opened notif page, remove red color
[ ] make new table in database for invites.
	[ ] save outgoing and incoming invites
	[ ] when user invites another, will be saving to two different places in db
	[ ] 

	game invites
	inviteId || creator (userId) || recipient (userId) (null if user not member yet) || recipientEmail || gameType || customMessage || timestampSent || timestampOpened || resolved (boolean - has challenge been either accepted or denied) || challengeAccepted (boolean - did recipient accept or deny)

	//when user logs in, check if they invites

	//ermahgerd mode = replace all vowels with 'er'


	//chat in game is private with only the two players
	//home chat is for anyone who is online and on the home page

	For chat box:
	socket.io
	[] make a chat box area for home page
	[x] set up socket.io connection in server
	[] create event for connection
	[] let users post comments
	[] emit new comments to other users
	[] let users send and receive privates messages
	[] make chat box area for private games
		[] restrict this box to the two players

INVITATIONS:
-need to do this for game to work
-when someone clicks JOIN on an open game, *****
	send a notification to the player who started that game
	red dot in notifications button
	say: "PLAYER-X joined your *gametype* game. Play now"
	-when you click this, it goes to the game screen

notifications db table:
notifications:
rows:
-auto incrementing serial ID
-userId (this person's notifications)
-type (type of notification: userJoinedYourOpenGame, gameInvite, ...)
-seen: true/false
-sender (userId) - person who joined the open game, or sent game invite
-time created - time of the notification
-gameId - id of the game to be played

CREATE TABLE notifications(
notificationId serial PRIMARY KEY,
userId integer NOT NULL,
type VARCHAR(200) NOT NULL,
seen BOOLEAN,
sender integer NOT NULL,
timeCreated timestamp,
gameId integer NOT NULL);

-now need to add in db function to write to this table whenever a user clicks JOIN on an open game, and also when a user invites a user to a game
-also need an api endpoint to put into componentDidMount to fetch this data when the notifications tab renders